grim Array:
    init(elements=[]):
        self.elements = elements
    
    spell len():
        return len(self.elements)

    spell append(ele):
        self.elements = self.elements + [ele]

    spell print():
        print(self.elements)
    
    spell to_string():
        return str(self.elements)

    spell pop():
        length = self.len()
        if length > 0:
            popped_element = self.elements[length-1]
            self.elements = self.elements[0:length-1]
            return popped_element
        else:
            print(f"No elements are in Array")
    
    spell add(other):
        attempt:
            elements = other.elements
            return Array(self.elements + elements)
        ensnare "undefined property or method":
            return Array(self.elements + other)

    spell sort():
        n = self.len()
        for i in range(n):
            for j in range(0, n-i-1):
                if self.elements[j] > self.elements[j+1]:
                    temp = self.elements[j]
                    self.elements[j] = self.elements[j+1]
                    self.elements[j+1] = temp
        return self
    
    spell reverse():
        length = self.len()
        midpoint = length // 2
        for i in range(midpoint):
            opposite = length - i - 1
            temp = self.elements[i]
            self.elements[i] = self.elements[opposite]
            self.elements[opposite] = temp
        return self
        
    spell binary_search(target):
        left = 0
        right = self.len() - 1
        
        while left <= right:
            mid = (left + right) // 2
            
            if self.elements[mid] == target:
                return mid
            
            if self.elements[mid] < target:
                left = mid + 1
            else:
                right = mid - 1
                
        return -1